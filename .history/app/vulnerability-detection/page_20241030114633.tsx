"use client";

import { useState, useEffect, useRef } from 'react';
import { motion } from 'framer-motion';
import Navbar from '../../components/Navbar';
import { FaShieldAlt } from 'react-icons/fa';
import hljs from 'highlight.js/lib/core';
import 'highlight.js/styles/vs2015.css';
import hljsDefineSolidity from 'highlightjs-solidity';

// 注册 Solidity 语言
hljsDefineSolidity(hljs);

const CUSTOM_HIGHLIGHT_PLACEHOLDER = '___CUSTOM_HIGHLIGHT___';

const highlightSolidityCode = (code: string) => {
  let processedCode = code.replace(/\*\*(.*?)\*\*/g, `${CUSTOM_HIGHLIGHT_PLACEHOLDER}$1${CUSTOM_HIGHLIGHT_PLACEHOLDER}`);
  const highlightedCode = hljs.highlight(processedCode, { language: 'solidity' }).value;
  return highlightedCode.replace(
    new RegExp(`${CUSTOM_HIGHLIGHT_PLACEHOLDER}(.*?)${CUSTOM_HIGHLIGHT_PLACEHOLDER}`, 'g'),
    '<span class="custom-highlight">$1</span>'
  );
};

const HighlightedCode = ({ code }: { code: string }) => {
  const codeRef = useRef<HTMLElement | null>(null);

  useEffect(() => {
    if (codeRef.current) {
      codeRef.current.innerHTML = highlightSolidityCode(code);
    }
  }, [code]);

  return <code ref={codeRef} className="hljs language-solidity" />;
};

export default function VulnerabilityDetection() {
  const [optimizedCode, setOptimizedCode] = useState('');
  const [vulnerabilityResult, setVulnerabilityResult] = useState('');
  const [isLoading, setIsLoading] = useState(true);

  useEffect(() => {
    // 从 sessionStorage 获取优化后的代码和漏洞检测结果
    const storedCode = sessionStorage.getItem('vulnerabilityCode');
    const storedResult = sessionStorage.getItem('vulnerabilityResult');
    
    if (storedCode) {
      setOptimizedCode(storedCode);
      sessionStorage.removeItem('vulnerabilityCode');
    }
    
    if (storedResult) {
      // 直接设置结果文本
      setVulnerabilityResult(storedResult);
      sessionStorage.removeItem('vulnerabilityResult');
    }
    
    // 清除 bytecode
    sessionStorage.removeItem('bytecode');
    
    setIsLoading(false);
  }, []);

  return (
    <main className="flex min-h-screen flex-col items-center justify-start p-4 bg-[#1A1A1A] text-white font-sans">
      <Navbar />
      <div className="mt-12 w-full max-w-[95%] mx-auto">
        <motion.h1 
          className="text-4xl font-bold mb-8 text-center text-transparent bg-clip-text bg-gradient-to-r from-purple-400 to-pink-600"
          initial={{ opacity: 0, y: -50 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.5 }}
        >
          漏洞检测
        </motion.h1>

        <div className="w-full flex flex-col md:flex-row space-y-6 md:space-y-0 md:space-x-6">
          <motion.div 
            className="flex-1 bg-gray-800 rounded-lg p-4 relative flex flex-col w-1/2"
            initial={{ opacity: 0, x: -50 }}
            animate={{ opacity: 1, x: 0 }}
            transition={{ duration: 0.5, delay: 0.2 }}
          >
            <h2 className="text-2xl font-semibold mb-4 text-purple-400">优化后代码</h2>
            <div className="w-full h-[calc(100vh-220px)] overflow-auto">
              <pre className="syntax-highlighter">
                <HighlightedCode code={optimizedCode} />
              </pre>
            </div>
          </motion.div>

          <motion.div 
            className="flex-1 bg-gray-800 rounded-lg p-4 relative flex flex-col w-1/2"
            initial={{ opacity: 0, x: 50 }}
            animate={{ opacity: 1, x: 0 }}
            transition={{ duration: 0.5, delay: 0.4 }}
          >
            <h2 className="text-2xl font-semibold mb-4 text-purple-400">漏洞检测结果</h2>
            <div className="w-full h-[calc(100vh-220px)] overflow-auto">
              <pre className="whitespace-pre-wrap text-green-400 font-mono bg-transparent p-4">{vulnerabilityResult}</pre>
            </div>
          </motion.div>
        </div>
      </div>
      <style jsx global>{`
        .syntax-highlighter {
          font-family: 'Fira Code', monospace;
          font-size: 14px;
          line-height: 1.5;
          overflow-x: auto;
          background-color: transparent !important;
          width: 100%;
          height: 100%;
          padding: 1rem;
          white-space: pre;
        }
        .hljs {
          background-color: transparent !important;
          padding: 0;
          height: 100%;
          font-family: 'Fira Code', monospace;
        }
        .hljs .custom-highlight,
        .hljs .custom-highlight * {
          background-color: yellow !important;
          color: black !important;
          text-shadow: none !important;
          font-weight: bold;
          padding: 1px 4px;
          border-radius: 4px;
          display: inline-block;
          line-height: 1;
        }
        .syntax-highlighter pre {
          margin: 0;
          padding: 0;
          font-family: 'Fira Code', monospace;
        }
      `}</style>
    </main>
  );
}
